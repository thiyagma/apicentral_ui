{"version":3,"sources":["../server/data.js"],"names":["addSession","getSession","addNotifier","getTasks","getTask","_sessions","_notifiers","task","tasks","id","name","percentComplete","status","increments","setInterval","Math","floor","random","length","forEach","notifier","min","token","data","type","cb","push","filters","Promise","resolve","filter","Object","keys","some","t"],"mappings":"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","file":"data.js","sourcesContent":["const _sessions = {};\r\nconst _notifiers = {\r\n  task: []\r\n};\r\n\r\nexport const tasks = [\r\n  {\r\n    id: 'task-1',\r\n    name: 'Initializing instance',\r\n    percentComplete: 0,\r\n    status: 'Waiting'\r\n  },\r\n  {\r\n    id: 'task-2',\r\n    name: 'Adding components',\r\n    percentComplete: 0,\r\n    status: 'Waiting'\r\n  },\r\n  {\r\n    id: 'task-3',\r\n    name: 'Testing infrastructure',\r\n    percentComplete: 0,\r\n    status: 'Waiting'\r\n  },\r\n  {\r\n    id: 'task-4',\r\n    name: 'Removing instance',\r\n    percentComplete: 0,\r\n    status: 'Waiting'\r\n  }\r\n];\r\n\r\nconst increments = [5, 10, 20, 25];\r\n\r\nsetInterval(\r\n  () => {\r\n    const task = tasks[\r\n      Math.floor(Math.random() * tasks.length)\r\n    ];\r\n\r\n    if (!task.percentComplete) {\r\n      task.status = 'Running';\r\n    }\r\n\r\n    _notifiers.task.forEach(notifier => notifier(task));\r\n  },\r\n  2000\r\n);\r\n\r\nsetInterval(\r\n  () => {\r\n    tasks.forEach((task) => {\r\n      if (task.status === 'Running') {\r\n        if (task.percentComplete < 100) {\r\n          task.percentComplete = Math.min(100, task.percentComplete +\r\n            increments[\r\n              Math.floor(Math.random() * increments.length)\r\n            ]\r\n          );\r\n        } else {\r\n          task.percentComplete = 0;\r\n          task.status = 'Waiting';\r\n        }\r\n        _notifiers.task.forEach(notifier => notifier(task));\r\n      }\r\n    });\r\n  },\r\n  1000\r\n);\r\n\r\nexport function addSession(token, data) {\r\n  _sessions[token] = data;\r\n}\r\n\r\nexport function getSession(token) {\r\n  return _sessions[token];\r\n}\r\n\r\nexport function addNotifier(type, cb) {\r\n  _notifiers[type].push(cb);\r\n}\r\n\r\nexport function getTasks(filters) {\r\n  if (filters) {\r\n    return Promise.resolve({\r\n      tasks: tasks.filter(task =>\r\n        Object.keys(filters).some(filter => task[filter] === filters[filter])\r\n      )\r\n    });\r\n  }\r\n  return Promise.resolve({ tasks });\r\n}\r\n\r\nexport function getTask(id) {\r\n  let task;\r\n  tasks.some((t) => {\r\n    if (t.id === id) {\r\n      task = t;\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n  return Promise.resolve({ task });\r\n}\r\n\r\nexport default { addNotifier, addSession, getSession, getTask, getTasks };\r\n"]}